[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://cb5gm3fb1073v"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/noise/perlin2d.gd" id="1_mj0yh"]
[ext_resource type="Script" path="res://addons/shaderV/tools/sinTime.gd" id="2_gq1l2"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_j63wc"]
default_input_values = [1, Vector3(0, 0, 0), 2, 5.0, 3, Vector3(0, 0, 0)]
initialized = true
script = ExtResource("1_mj0yh")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_3dmr2"]
default_input_values = [0, 1.0, 1, 0.5]
initialized = true
script = ExtResource("2_gq1l2")

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;



// PerlinNoise2D
float _perlin2dNoiseFunc(vec2 P, vec2 _period_perl2) {
	vec4 Pi = floor(vec4(P, P)) + vec4(0.0, 0.0, 1.0, 1.0);
	vec4 Pf = fract(vec4(P, P)) - vec4(0.0, 0.0, 1.0, 1.0);
	
	if (_period_perl2.x != 0.0 && _period_perl2.y != 0.0)
		Pi = mod(Pi, vec4(_period_perl2, _period_perl2));
	
	Pi = Pi - floor(Pi * (1.0 / 289.0)) * 289.0;
	vec4 ix = Pi.xzxz;
	vec4 iy = Pi.yyww;
	vec4 fx = Pf.xzxz;
	vec4 fy = Pf.yyww;
	
	vec4 i = (((((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy))-
		floor((((((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy)*34.0)+1.0)*
		((((ix*34.0)+1.0)*ix)-floor((((ix*34.0)+1.0)*ix)*(1.0/289.0))*289.0 + iy))*(1.0/289.0))*289.0;
	
	vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;
	vec4 gy = abs(gx) - 0.5 ;
	vec4 tx = floor(gx + 0.5);
	gx = gx - tx;
	
	vec2 g00 = vec2(gx.x,gy.x);
	vec2 g10 = vec2(gx.y,gy.y);
	vec2 g01 = vec2(gx.z,gy.z);
	vec2 g11 = vec2(gx.w,gy.w);
	
	vec4 norm = 1.79284291400159 - 0.85373472095314 * vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));
	g00 *= norm.x;
	g01 *= norm.y;
	g10 *= norm.z;
	g11 *= norm.w;
	
	float n00 = dot(g00, vec2(fx.x, fy.x));
	float n10 = dot(g10, vec2(fx.y, fy.y));
	float n01 = dot(g01, vec2(fx.z, fy.z));
	float n11 = dot(g11, vec2(fx.w, fy.w));
	
	vec2 fade_xy = Pf.xy * Pf.xy * Pf.xy * (Pf.xy * (Pf.xy * 6.0 - 15.0) + 10.0);
	vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);
	float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
	return 2.3 * n_xy;
}

void fragment() {
	float n_out3p0;
// SinTIME:3
	float n_in3p0 = 1.00000;
	float n_in3p1 = 0.50000;
	{
		n_out3p0 = n_in3p1 * sin(n_in3p0 * TIME);
	}


	float n_out2p0;
// PerlinNoise2D:2
	vec3 n_in2p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in2p3 = vec3(0.00000, 0.00000, 0.00000);
	{
		n_out2p0 = _perlin2dNoiseFunc((UV.xy+n_in2p1.xy)*n_out3p0, n_in2p3.xy);
	}


// Output:0
	COLOR.a = n_out2p0;


}
"
graph_offset = Vector2(-245.696, 103.901)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeCustom_j63wc")
nodes/fragment/2/position = Vector2(160, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeCustom_3dmr2")
nodes/fragment/3/position = Vector2(-100, 240)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 1, 3, 0, 2, 2)
