[gd_resource type="ShaderMaterial" load_steps=12 format=3 uid="uid://d3g7wr3gx3box"]

[ext_resource type="Script" path="res://addons/shaderV/rgba/generate_shapes/generateSpiral.gd" id="1_67mwq"]

[sub_resource type="VisualShaderNodeColorConstant" id="234"]
constant = Color(0, 0, 0, 0.176471)

[sub_resource type="VisualShaderNodeVec3Constant" id="235"]
constant = Vector3(1.7, 0.5, 0)

[sub_resource type="VisualShaderNodeInput" id="175"]
input_name = "uv"

[sub_resource type="VisualShaderNodeCustom" id="236"]
default_input_values = [1, Vector3(0.5, 0.5, 0), 2, 70.0, 3, 1.0, 4, 1.0, 5, 0.0, 6, 0.0, 7, Vector3(1, 1, 1), 8, 1.0]
initialized = true
script = ExtResource("1_67mwq")

[sub_resource type="VisualShaderNodeFloatConstant" id="237"]
constant = 90.0

[sub_resource type="VisualShaderNodeFloatConstant" id="238"]
constant = 15.0

[sub_resource type="VisualShaderNodeFloatConstant" id="239"]
constant = 5.0

[sub_resource type="VisualShaderNodeFloatConstant" id="240"]
constant = -2.0

[sub_resource type="VisualShaderNodeInput" id="241"]
input_name = "time"

[sub_resource type="VisualShader" id="242"]
code = "shader_type canvas_item;
render_mode blend_mix;



// SpiralShape
vec4 _generateSpiralFunc(vec2 _uv_genSpir, vec2 _pivot_genSpir, float _size_genSpir, float _lineAmnt_genSpir,
						float _spd_genSpir, float _soft_genSpir, float _t1me_genSpir, vec4 _col_genSpir){
	_uv_genSpir -= _pivot_genSpir;
	float _va1ue_genSpir = 1.0 - sin(length(_uv_genSpir) * _size_genSpir +
					floor(_lineAmnt_genSpir) * atan(_uv_genSpir.x, _uv_genSpir.y) +
					_t1me_genSpir * _spd_genSpir ) / _soft_genSpir;
	return vec4(_col_genSpir.rgb, _col_genSpir.a * _va1ue_genSpir);
}

void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


// Vector3Constant:38
	vec3 n_out38p0 = vec3(1.700000, 0.500000, 0.000000);


// FloatConstant:41
	float n_out41p0 = 90.000000;


// FloatConstant:42
	float n_out42p0 = 15.000000;


// FloatConstant:43
	float n_out43p0 = 5.000000;


// FloatConstant:44
	float n_out44p0 = -2.000000;


// Input:45
	float n_out45p0 = TIME;


// ColorConstant:37
	vec4 n_out37p0 = vec4(0.000000, 0.000000, 0.000000, 0.176471);


	vec3 n_out40p0;
	float n_out40p1;
// SpiralShape:40
	float n_in40p8 = 1.00000;
	{
		vec4 n_out40p0n_out40p1 = _generateSpiralFunc(vec3(n_out4p0, 0.0).xy, n_out38p0.xy, n_out41p0, n_out42p0, n_out44p0, n_out43p0, n_out45p0, vec4(vec3(n_out37p0.xyz), n_in40p8));
		n_out40p0 = n_out40p0n_out40p1.rgb;
		n_out40p1 = n_out40p0n_out40p1.a;
	}


// Output:0
	COLOR.rgb = n_out40p0;
	COLOR.a = n_out40p1;


}
"
graph_offset = Vector2(-356.982, -99.6612)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(580, 200)
nodes/fragment/4/node = SubResource("175")
nodes/fragment/4/position = Vector2(60, -80)
nodes/fragment/37/node = SubResource("234")
nodes/fragment/37/position = Vector2(0, 540)
nodes/fragment/38/node = SubResource("235")
nodes/fragment/38/position = Vector2(-140, 40)
nodes/fragment/40/node = SubResource("236")
nodes/fragment/40/position = Vector2(340, 200)
nodes/fragment/41/node = SubResource("237")
nodes/fragment/41/position = Vector2(0, 140)
nodes/fragment/42/node = SubResource("238")
nodes/fragment/42/position = Vector2(0, 220)
nodes/fragment/43/node = SubResource("239")
nodes/fragment/43/position = Vector2(0, 300)
nodes/fragment/44/node = SubResource("240")
nodes/fragment/44/position = Vector2(0, 380)
nodes/fragment/45/node = SubResource("241")
nodes/fragment/45/position = Vector2(-120, 460)
nodes/fragment/connections = PackedInt32Array(4, 0, 40, 0, 38, 0, 40, 1, 41, 0, 40, 2, 42, 0, 40, 3, 43, 0, 40, 4, 44, 0, 40, 5, 45, 0, 40, 6, 37, 0, 40, 7, 40, 1, 0, 1, 40, 0, 0, 0)

[resource]
shader = SubResource("242")
